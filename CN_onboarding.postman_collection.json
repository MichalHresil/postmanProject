{
	"info": {
		"_postman_id": "a5a952b2-d469-4f2f-8f06-e3c68387c1df",
		"name": "CN_onboarding",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21766239"
	},
	"item": [
		{
			"name": "post new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test of user by email \"+pm.collectionVariables.get(\"email\"), function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"email\"));\r",
							"\r",
							"    pm.collectionVariables.set(\"responseUserID\", jsonData.id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{URL}}?name={{name}}&email={{email}}&gender={{gender}}&status={{status}}",
					"host": [
						"{{URL}}"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "email",
							"value": "{{email}}"
						},
						{
							"key": "gender",
							"value": "{{gender}}"
						},
						{
							"key": "status",
							"value": "{{status}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get user id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test if user with ID exists\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(jsonData.message).to.eql(undefined);\r",
							"});\r",
							"\r",
							"pm.test(\"Test if correct user has been returned\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get(\"email\"));\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/{{responseUserID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"{{responseUserID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "change user's name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{URL}}/{{responseUserID}}?name=John Doe",
					"host": [
						"{{URL}}"
					],
					"path": [
						"{{responseUserID}}"
					],
					"query": [
						{
							"key": "name",
							"value": "John Doe"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "test of changed name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test if name changed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).not.eql(pm.collectionVariables.get(\"name\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/{{responseUserID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"{{responseUserID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/{{responseUserID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"{{responseUserID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "test of deleted user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 - missing user\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Test to not find user by id and email\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(undefined);\r",
							"    pm.expect(jsonData.email).to.eql(undefined);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/{{responseUserID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"{{responseUserID}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "6d53446d731d6c6ad164ee98d574fbbe3cfa3bc0b6ed7e70e8ea9eecfd7ba8b8",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "responseUserID",
			"value": "",
			"type": "string"
		},
		{
			"key": "email",
			"value": "smith@worktest.org",
			"type": "string"
		},
		{
			"key": "name",
			"value": "John Smith",
			"type": "string"
		},
		{
			"key": "gender",
			"value": "male",
			"type": "string"
		},
		{
			"key": "status",
			"value": "active",
			"type": "string"
		},
		{
			"key": "URL",
			"value": "https://gorest.co.in/public/v2/users",
			"type": "string"
		}
	]
}